{"version":3,"sources":["js/components/slider.js","js/components/menu.js","js/app.js"],"names":["slides","document","querySelectorAll","arrowLeft","querySelector","arrowRight","currentSlide","resetImgs","i","length","style","display","initSlide","addEventListener","prevImg","nextImg","menuBtn","menu","menuMobile","mobileLinks","menuState","toggleMenu","classList","remove","forEach","item","add"],"mappings":";;;AACA,IAAMA,EAASC,SAASC,iBAAiB,UAEvCC,EAAYF,SAASG,cAAc,cACnCC,EAAaJ,SAASG,cAAc,eAEtCE,aAAe,EAGfC,UAAY,WACL,IAAA,IAAIC,EAAI,EAAGA,EAAIR,EAAOS,OAAQD,IACjCR,EAAOQ,GAAGE,MAAMC,QAAU,QAI9BC,UAAY,WACVL,YACAP,EAAO,GAAGU,MAAMC,QAAU,SAI5BR,EAAUU,iBAAiB,QAAS,WACb,IAAjBP,eACFA,aAAeN,EAAOS,QAExBK,YAGFA,QAAU,WACRP,YACAP,EAAOM,aAAe,GAAGI,MAAMC,QAAU,QACzCL,gBAIFD,EAAWQ,iBAAiB,QAAS,WAC/BP,eAAiBN,EAAOS,OAAS,IACnCH,cAAgB,GAElBS,YAGFA,QAAU,WACRR,YACAP,EAAOM,aAAe,GAAGI,MAAMC,QAAU,QACzCL,gBAGFM;;AC9CA,IAAMI,EAAUf,SAASG,cAAc,YACjCa,EAAOhB,SAASG,cAAc,SAC9Bc,EAAajB,SAASG,cAAc,eACtCe,EAAclB,SAASC,iBAAiB,oBAExCkB,GAAY,EAEhBC,WAAa,WACND,GAUHJ,EAAQM,UAAUC,OAAO,SACzBN,EAAKK,UAAUC,OAAO,QACtBL,EAAWI,UAAUC,OAAO,QAC5BJ,EAAYK,QAAQ,SAAAC,GAAQA,OAAAA,EAAKH,UAAUC,OAAO,UAClDH,GAAY,IAbZJ,EAAQM,UAAUI,IAAI,SACtBT,EAAKK,UAAUI,IAAI,QACnBR,EAAWI,UAAUI,IAAI,QAEzBP,EAAYK,QAAQ,SAAAC,GAAQA,OAAAA,EAAKH,UAAUI,IAAI,UAE/CN,GAAY,IAWhBJ,EAAQH,iBAAiB,QAASQ;;AC1BlC,aAFA,QAAA,yBACA,QAAA,uBACA,QAAA","file":"app.ebd41ce2.js","sourceRoot":"../src","sourcesContent":["// querySectorAll return a html collection like an array with index\nconst slides = document.querySelectorAll(\".slide\"),\n  // target the arrows\n  arrowLeft = document.querySelector(\"#arrowLeft\"),\n  arrowRight = document.querySelector(\"#arrowRight\");\n// target current slide\ncurrentSlide = 0;\n\n// prep and clear all images\nresetImgs = () => {\n  for (let i = 0; i < slides.length; i++) {\n    slides[i].style.display = \"none\";\n  }\n};\n// initialize slide\ninitSlide = () => {\n  resetImgs();\n  slides[0].style.display = \"block\";\n};\n\n// when left arrow is click show previous image\narrowLeft.addEventListener(\"click\", () => {\n  if (currentSlide === 0) {\n    currentSlide = slides.length;\n  }\n  prevImg();\n});\n// show previous image\nprevImg = () => {\n  resetImgs();\n  slides[currentSlide - 1].style.display = \"block\";\n  currentSlide--;\n};\n\n// when right arrow is clicked\narrowRight.addEventListener(\"click\", () => {\n  if (currentSlide === slides.length - 1) {\n    currentSlide = -1;\n  }\n  nextImg();\n});\n// show next\nnextImg = () => {\n  resetImgs();\n  slides[currentSlide + 1].style.display = \"block\";\n  currentSlide++;\n};\n// call initialized slide\ninitSlide();\n","// select dom elements\n// // select dom items\nconst menuBtn = document.querySelector(\".menuBtn\");\nconst menu = document.querySelector(\".menu\");\nconst menuMobile = document.querySelector(\".menuMobile\");\nlet mobileLinks = document.querySelectorAll(\".menuMobile-link\");\n// set initial state of menu\nlet menuState = false;\n// create function for event\ntoggleMenu = () => {\n  if (!menuState) {\n    menuBtn.classList.add(\"close\");\n    menu.classList.add(\"show\");\n    menuMobile.classList.add(\"show\");\n    // loop through navmenu links\n    mobileLinks.forEach(item => item.classList.add(\"show\"));\n    // set state for menu\n    menuState = true;\n  } else {\n    // reverse toggle\n    menuBtn.classList.remove(\"close\");\n    menu.classList.remove(\"show\");\n    menuMobile.classList.remove(\"show\");\n    mobileLinks.forEach(item => item.classList.remove(\"show\"));\n    menuState = false;\n  }\n};\n// add event to button\nmenuBtn.addEventListener(\"click\", toggleMenu);\n","import \"../styles/styles.scss\";\nimport \"./components/slider\";\nimport \"./components/menu\";\n\n// console.log(\"live with parcel\");\n"]}